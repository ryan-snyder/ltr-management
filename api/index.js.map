{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/theme/theme.ts", "../app/theme/components/button.ts", "../app/theme/components/index.ts", "../app/theme/foundations/colors.ts", "../app/components/sidebar-with-header.tsx", "../app/routes/dashboard.tsx", "../app/components/logo-banner.tsx", "../app/utils/db.server.ts", "../app/routes/dashboard/index.tsx", "../app/routes/sign-in/$.tsx", "../app/routes/sign-up/$.tsx", "../app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\r\n\r\nimport type { EntryContext } from \"@remix-run/node\";\r\nimport { Response } from \"@remix-run/node\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport isbot from \"isbot\";\r\nimport { renderToPipeableStream } from \"react-dom/server\";\r\nimport createEmotionCache from \"@emotion/cache\";\r\nimport { CacheProvider as EmotionCacheProvider } from \"@emotion/react\";\r\nimport createEmotionServer from \"@emotion/server/create-instance\";\r\n\r\nconst ABORT_DELAY = 5000;\r\n\r\nconst handleRequest = (\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) =>\r\n  isbot(request.headers.get(\"user-agent\"))\r\n    ? handleBotRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      )\r\n    : handleBrowserRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      );\r\nexport default handleRequest;\r\n\r\nconst handleBotRequest = (\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) =>\r\n  new Promise((resolve, reject) => {\r\n    let didError = false;\r\n    const emotionCache = createEmotionCache({ key: \"css\" });\r\n\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <EmotionCacheProvider value={emotionCache}>\r\n        <RemixServer context={remixContext} url={request.url} />\r\n      </EmotionCacheProvider>,\r\n      {\r\n        onAllReady: () => {\r\n          const reactBody = new PassThrough();\r\n          const emotionServer = createEmotionServer(emotionCache);\r\n\r\n          const bodyWithStyles = emotionServer.renderStylesToNodeStream();\r\n          reactBody.pipe(bodyWithStyles);\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(bodyWithStyles, {\r\n              headers: responseHeaders,\r\n              status: didError ? 500 : responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(reactBody);\r\n        },\r\n        onShellError: (error: unknown) => {\r\n          reject(error);\r\n        },\r\n        onError: (error: unknown) => {\r\n          didError = true;\r\n\r\n          console.error(error);\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n\r\nconst handleBrowserRequest = (\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) =>\r\n  new Promise((resolve, reject) => {\r\n    let didError = false;\r\n    const emotionCache = createEmotionCache({ key: \"css\" });\r\n\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <EmotionCacheProvider value={emotionCache}>\r\n        <RemixServer context={remixContext} url={request.url} />\r\n      </EmotionCacheProvider>,\r\n      {\r\n        onShellReady: () => {\r\n          const reactBody = new PassThrough();\r\n          const emotionServer = createEmotionServer(emotionCache);\r\n\r\n          const bodyWithStyles = emotionServer.renderStylesToNodeStream();\r\n          reactBody.pipe(bodyWithStyles);\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(bodyWithStyles, {\r\n              headers: responseHeaders,\r\n              status: didError ? 500 : responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(reactBody);\r\n        },\r\n        onShellError: (error: unknown) => {\r\n          reject(error);\r\n        },\r\n        onError: (error: unknown) => {\r\n          didError = true;\r\n\r\n          console.error(error);\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });", "import React from 'react'\r\nimport {\r\n    Links,\r\n    LiveReload,\r\n    Meta,\r\n    Outlet,\r\n    Scripts,\r\n    ScrollRestoration,\r\n    useLoaderData,\r\n} from '@remix-run/react'\r\nimport { LoaderFunction } from '@remix-run/node'\r\nimport { rootAuthLoader } from '@clerk/remix/ssr.server'\r\nimport { ClerkApp, ClerkCatchBoundary } from '@clerk/remix'\r\nimport { Box, ChakraProvider, cookieStorageManagerSSR, Image, localStorageManager } from '@chakra-ui/react'\r\nimport { theme } from 'theme'\r\nimport 'focus-visible' // Remove Chakra's outline caused by clicks\r\nimport SidebarWithHeader from './components/sidebar-with-header'\r\nimport NavBar from './components/sidebar-with-header'\r\n\r\n// Define and export your loader\r\nexport const loader: LoaderFunction = args => {\r\n  return rootAuthLoader(args, ({ request }) => {\r\n    const { sessionId, userId, getToken } = request.auth;\r\n    // fetch data\r\n    return { cookie: request.headers.get(\"cookie\") ?? '' }\r\n  });\r\n};\r\nexport const CatchBoundary = ClerkCatchBoundary()\r\n\r\nfunction Document({\r\n    children,\r\n    title = \"LRT Management\",\r\n  }: {\r\n    children: React.ReactNode;\r\n    title?: string;\r\n  }) {\r\n    return (\r\n      <html lang=\"en\">\r\n        <head>\r\n          <Meta />\r\n          <title>{title}</title>\r\n          <Links />\r\n        </head>\r\n        <body>\r\n          {children}\r\n          <ScrollRestoration />\r\n          <Scripts />\r\n          {process.env.NODE_ENV === 'development' ? (\r\n                        <LiveReload />\r\n                    ) : null}\r\n        </body>\r\n      </html>\r\n    );\r\n  }\r\n  \r\n//todo: Add nav\r\nfunction App() {\r\n    const { cookie } = useLoaderData();\r\n    return (\r\n        <Document>\r\n            <ChakraProvider theme={theme}\r\n              colorModeManager={typeof cookie === 'string'\r\n              ? cookieStorageManagerSSR(cookie)\r\n              : localStorageManager}\r\n            >\r\n              <NavBar>\r\n                <Box as='main' minH='100vh' pos='relative'>\r\n                    <Outlet />\r\n\r\n                    <Image\r\n                        src='images/cover.png'\r\n                        alt='Bossa Nova Stack cover'\r\n                        boxSize='full'\r\n                        objectFit='cover'\r\n                        pos='absolute'\r\n                        top={0}\r\n                        zIndex={-1}\r\n                    />\r\n                </Box>\r\n              </NavBar>\r\n            </ChakraProvider>\r\n        </Document>\r\n    )\r\n}\r\n\r\nexport default ClerkApp(App)", "import { extendTheme } from '@chakra-ui/react'\r\nimport { components } from './components'\r\nimport { colors } from './foundations'\r\n\r\nexport const theme = extendTheme({\r\n    colors,\r\n    components,\r\n})\r\n", "import {\r\n    ComponentDefaultProps,\r\n    ComponentStyleConfig,\r\n    SystemStyleObject,\r\n} from '@chakra-ui/react'\r\n\r\nconst baseStyle: SystemStyleObject = {\r\n    rounded: 'lg',\r\n}\r\n\r\nconst defaultProps: ComponentDefaultProps = {\r\n    colorScheme: 'green',\r\n}\r\n\r\nconst sizes: Record<string, SystemStyleObject> = {\r\n    md: {\r\n        px: 8,\r\n    },\r\n}\r\n\r\nconst variants: Record<string, SystemStyleObject> = {}\r\n\r\nexport const Button: ComponentStyleConfig = {\r\n    baseStyle,\r\n    defaultProps,\r\n    sizes,\r\n    variants,\r\n}\r\n", "import { Button } from './button'\r\n\r\nexport const components = {\r\n    Button,\r\n}\r\n", "// Color shades generated on https://www.tailwindshades.com\r\n\r\nexport const colors = {\r\n    gray: {\r\n        '50': '#B0B5C0',\r\n        '100': '#A5ABB6',\r\n        '200': '#8E96A4',\r\n        '300': '#788192',\r\n        '400': '#646D7D',\r\n        '500': '#525966',\r\n        '600': '#393E47',\r\n        '700': '#202328',\r\n        '800': '#070809',\r\n        '900': '#000000',\r\n    },\r\n\r\n    green: {\r\n        '50': '#50FF95',\r\n        '100': '#3BFF89',\r\n        '200': '#12FF70',\r\n        '300': '#00E95C',\r\n        '400': '#00C04C',\r\n        '500': '#00973C',\r\n        '600': '#005F26',\r\n        '700': '#00270F',\r\n        '800': '#000000',\r\n        '900': '#000000',\r\n    },\r\n}\r\n", "import React, { ReactNode } from 'react';\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Avatar,\r\n  HStack,\r\n  Link,\r\n  IconButton,\r\n  Button,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  MenuDivider,\r\n  useDisclosure,\r\n  useColorModeValue,\r\n  Stack,\r\n} from '@chakra-ui/react';\r\nimport { HamburgerIcon, CloseIcon, AddIcon } from '@chakra-ui/icons';\r\n\r\nconst Links = ['Dashboard', 'Projects', 'Team'];\r\n\r\nconst NavLink = ({ children }: { children: ReactNode }) => (\r\n  <Link\r\n    px={2}\r\n    py={1}\r\n    rounded={'md'}\r\n    _hover={{\r\n      textDecoration: 'none',\r\n      bg: useColorModeValue('gray.200', 'gray.700'),\r\n    }}\r\n    href={'#'}>\r\n    {children}\r\n  </Link>\r\n);\r\n\r\nexport default function NavBar(\r\n  {children} : {\r\n    children: ReactNode\r\n  }\r\n) {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <>\r\n      <Box bg={useColorModeValue('gray.100', 'gray.900')} px={4}>\r\n        <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\r\n          <IconButton\r\n            size={'md'}\r\n            icon={isOpen ? <CloseIcon /> : <HamburgerIcon />}\r\n            aria-label={'Open Menu'}\r\n            display={{ md: 'none' }}\r\n            onClick={isOpen ? onClose : onOpen}\r\n          />\r\n          <HStack spacing={8} alignItems={'center'}>\r\n            <Box>Logo</Box>\r\n            <HStack\r\n              as={'nav'}\r\n              spacing={4}\r\n              display={{ base: 'none', md: 'flex' }}>\r\n              {Links.map((link) => (\r\n                <NavLink key={link}>{link}</NavLink>\r\n              ))}\r\n            </HStack>\r\n          </HStack>\r\n          <Flex alignItems={'center'}>\r\n            <Button\r\n              variant={'solid'}\r\n              colorScheme={'teal'}\r\n              size={'sm'}\r\n              mr={4}\r\n              leftIcon={<AddIcon />}>\r\n              Action\r\n            </Button>\r\n            <Menu>\r\n              <MenuButton\r\n                as={Button}\r\n                rounded={'full'}\r\n                variant={'link'}\r\n                cursor={'pointer'}\r\n                minW={0}>\r\n                <Avatar\r\n                  size={'sm'}\r\n                  src={\r\n                    'https://images.unsplash.com/photo-1493666438817-866a91353ca9?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&fit=crop&h=200&w=200&s=b616b2c5b373a80ffc9636ba24f7a4a9'\r\n                  }\r\n                />\r\n              </MenuButton>\r\n              <MenuList>\r\n                <MenuItem>Link 1</MenuItem>\r\n                <MenuItem>Link 2</MenuItem>\r\n                <MenuDivider />\r\n                <MenuItem>Link 3</MenuItem>\r\n              </MenuList>\r\n            </Menu>\r\n          </Flex>\r\n        </Flex>\r\n\r\n        {isOpen ? (\r\n          <Box pb={4} display={{ md: 'none' }}>\r\n            <Stack as={'nav'} spacing={4}>\r\n              {Links.map((link) => (\r\n                <NavLink key={link}>{link}</NavLink>\r\n              ))}\r\n            </Stack>\r\n          </Box>\r\n        ) : null}\r\n      </Box>\r\n\r\n      <Box>{children}</Box>\r\n    </>\r\n  );\r\n}", "import { Outlet, useLoaderData} from '@remix-run/react'\r\nimport { ActionFunction, LoaderFunction, json, redirect } from '@remix-run/node'\r\nimport { SignedIn, useAuth} from '@clerk/remix'\r\nimport { getAuth } from '@clerk/remix/ssr.server'\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardFooter,\r\n    CardHeader,\r\n    Heading,\r\n    SimpleGrid,\r\n    Stack,\r\n    Text,\r\n    useBreakpointValue,\r\n} from '@chakra-ui/react'\r\nimport { LogoBanner } from 'components'\r\nimport { getDB } from 'utils'\r\nimport { users } from '@clerk/clerk-sdk-node'\r\n\r\nconst dbErrorMessage =\r\n    'Something is missing.<br/>Did you set up Supabase yet?<br/>You can find the <a href=\"https://github.com/clerkinc/remix-bossa-nova-stack#configuring-the-database\" target=\"_blank\">instructions in the README file</a>.'\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n    const { userId } = await getAuth(request)\r\n    console.log(userId)\r\n    //if they aren't signed in, redirect them to sign in page\r\n    if (!userId) return redirect('/sign-in')\r\n    const {firstName, lastName } = await users.getUser(userId);\r\n    console.log('Got user in loader...');\r\n    console.log(`${firstName} ${lastName}`)\r\n    const db = await getDB(request)\r\n    if (!db) {\r\n        return json({ error: dbErrorMessage })\r\n    }\r\n\r\n    const { data } = await db.from('songs').select()\r\n\r\n    if (!data) {\r\n        return json({ error: dbErrorMessage })\r\n    }\r\n\r\n    return json({firstName, lastName })\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n    const formData = await request.formData()\r\n    const { userId } = await getAuth(request)\r\n\r\n    const song = formData.get('add-song')\r\n\r\n    const db = await getDB(request)\r\n    if (!db) return null\r\n\r\n    await db.from('songs').insert({ body: song, user_id: userId })\r\n    return null\r\n}\r\n\r\nexport default function Index() {\r\n    const { signOut } = useAuth()\r\n    const data = useLoaderData()\r\n    const headingSize = useBreakpointValue({ base: 'lg', sm: '2xl', lg: '4xl' })\r\n   /*\r\n   Since the below will be our dashboard, it should be in the dashboard route\r\n   As per remix convention\r\n   See: https://remix.run/docs/en/v1/guides/routing\r\n   */\r\n    return (\r\n        <Stack\r\n            justify='center'\r\n            textAlign='center'\r\n            h='100vh'\r\n            flex={1}\r\n            color='white'\r\n            gap={20}\r\n        >\r\n            <Stack gap={4} p={{ base: 4, md: 8 }} align='center'>\r\n                <Heading\r\n                    as='h1'\r\n                    size={headingSize}\r\n                    textTransform='uppercase'\r\n                    color='green.400'\r\n                >\r\n                    {`Welcome ${data.firstName} ${data.lastName}`}\r\n                </Heading>\r\n                <SignedIn>\r\n                    <Outlet/>\r\n                    <Stack align='center' gap={4}>\r\n                        <Button onClick={() => signOut()} bg='gray.500'>\r\n                            Sign out\r\n                        </Button>\r\n                    </Stack>\r\n                </SignedIn>\r\n            </Stack>\r\n            <LogoBanner />\r\n        </Stack>\r\n    )\r\n}\r\n", "import { Flex, Image } from '@chakra-ui/react'\r\n\r\nexport function LogoBanner() {\r\n    return (\r\n        <Flex\r\n            direction={{ base: 'column', md: 'row' }}\r\n            align='center'\r\n            justify='center'\r\n            bg='white'\r\n            gap={8}\r\n            py={4}\r\n        >\r\n            <Image h={6} src='images/remix.svg' />\r\n            <Image h={8} src='images/clerk.svg' />\r\n            <Image h={8} src='images/supabase.svg' />\r\n            <Image h={8} src='images/chakra.png' />\r\n            <Image h={8} src='images/vercel.svg' />\r\n        </Flex>\r\n    )\r\n}\r\n", "import { getAuth } from '@clerk/remix/ssr.server'\r\nimport { createClient, SupabaseClient } from '@supabase/supabase-js'\r\n\r\nexport const getDB = async (\r\n    request: Request,\r\n): Promise<SupabaseClient | null> => {\r\n    try {\r\n        const { userId, getToken } = await getAuth(request)\r\n        if (!userId) return null\r\n\r\n        const secret = await getToken({ template: 'supabase' })\r\n        if (!secret) return null\r\n\r\n        const supabaseUrl = process.env.SUPABASE_URL || ''\r\n        const supabaseKey = process.env.SUPABASE_ANON_KEY || ''\r\n\r\n        const client = createClient(supabaseUrl, supabaseKey, {\r\n            global: {\r\n                headers: {\r\n                    Authorization: `Bearer ${secret}`,\r\n                },\r\n            },\r\n        })\r\n        return client\r\n    } catch (error) {\r\n        return null\r\n    }\r\n}\r\n", "import { useLoaderData} from '@remix-run/react'\r\nimport { ActionFunction, LoaderFunction, json, redirect } from '@remix-run/node'\r\nimport { SignedIn, useAuth} from '@clerk/remix'\r\nimport { getAuth } from '@clerk/remix/ssr.server'\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardFooter,\r\n    CardHeader,\r\n    Heading,\r\n    SimpleGrid,\r\n    Stack,\r\n    Text,\r\n    useBreakpointValue,\r\n} from '@chakra-ui/react'\r\nimport { Info, DateTime } from \"luxon\"\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n    const { userId } = await getAuth(request)\r\n    console.log(userId)\r\n    //if they aren't signed in, redirect them to sign in page\r\n    if (!userId) return redirect('/sign-in')\r\n    return null\r\n}\r\n\r\n\r\nexport default function Dashboard() {\r\n    const current = DateTime.now()\r\n    const weekdays = Info.weekdays().slice(0, 5)\r\n   /*\r\n   Since the below will be our dashboard, it should be in the dashboard route\r\n   As per remix convention\r\n   See: https://remix.run/docs/en/v1/guides/routing\r\n   */\r\n    return (\r\n                    <Stack spacing={4} align='center' direction='row'>\r\n                            {weekdays.map((day, ind) => \r\n                                <Card key={ind} bgColor={ind == (current.weekday-1) ? 'darkgray' : 'white'} textColor='black'>\r\n                                    <CardHeader>\r\n                                        <Heading size='md'>{day}</Heading>\r\n                                    </CardHeader>\r\n                                    <CardBody>\r\n                                        <Text>X hours worked</Text>\r\n                                    </CardBody>\r\n                                    <CardFooter>\r\n                                        <Text>{current.minus({days: (current.weekday-1) - ind}).toLocaleString(DateTime.DATE_MED)}</Text>\r\n                                    </CardFooter>\r\n                              </Card>\r\n                            )}\r\n                    </Stack>\r\n    )\r\n}\r\n", "import { Center } from '@chakra-ui/react'\r\nimport { SignIn } from '@clerk/remix'\r\n\r\nexport default function SignInRoute() {\r\n    return (\r\n        <Center height='100vh' p={10}>\r\n            <SignIn routing='path' path='/sign-in' signUpUrl='/sign-up' afterSignInUrl={'/dashboard'}/>\r\n        </Center>\r\n    )\r\n}\r\n", "import { Center } from '@chakra-ui/react'\r\nimport { SignUp } from '@clerk/remix'\r\n\r\nexport default function SignUpRoute() {\r\n    return (\r\n        <Center height='100vh' p={10}>\r\n            <SignUp routing='path' path='/sign-up' signInUrl='/sign-in' afterSignUpUrl={'/dashboard'}/>\r\n        </Center>\r\n    )\r\n}\r\n", "import { useLoaderData} from '@remix-run/react'\r\nimport { ActionFunction, LoaderFunction, json, redirect } from '@remix-run/node'\r\nimport { SignedIn, useAuth, UserProfile} from '@clerk/remix'\r\nimport { getAuth } from '@clerk/remix/ssr.server'\r\nimport {\r\n    Button,\r\n    Heading,\r\n    Stack,\r\n    Text,\r\n    useBreakpointValue,\r\n} from '@chakra-ui/react'\r\nimport { LogoBanner } from 'components'\r\nimport { getDB } from 'utils'\r\nimport { users } from '@clerk/clerk-sdk-node'\r\n\r\nconst dbErrorMessage =\r\n    'Something is missing.<br/>Did you set up Supabase yet?<br/>You can find the <a href=\"https://github.com/clerkinc/remix-bossa-nova-stack#configuring-the-database\" target=\"_blank\">instructions in the README file</a>.'\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n    const { userId } = await getAuth(request)\r\n    console.log(userId)\r\n    //if they aren't signed in, redirect them to sign in page\r\n    if (!userId) return redirect('/sign-in')\r\n    const {firstName, lastName } = await users.getUser(userId);\r\n    console.log('Got user in loader...');\r\n    console.log(`${firstName} ${lastName}`)\r\n    const db = await getDB(request)\r\n    if (!db) {\r\n        return json({ error: dbErrorMessage })\r\n    }\r\n\r\n    const { data } = await db.from('songs').select()\r\n\r\n    if (!data) {\r\n        return json({ error: dbErrorMessage })\r\n    }\r\n\r\n    return json({firstName, lastName })\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n    const formData = await request.formData()\r\n    const { userId } = await getAuth(request)\r\n\r\n    const song = formData.get('add-song')\r\n\r\n    const db = await getDB(request)\r\n    if (!db) return null\r\n\r\n    await db.from('songs').insert({ body: song, user_id: userId })\r\n    return null\r\n}\r\n\r\nexport default function Index() {\r\n    const { signOut } = useAuth()\r\n    const data = useLoaderData()\r\n    const headingSize = useBreakpointValue({ base: 'lg', sm: '2xl', lg: '4xl' })\r\n   /*\r\n   Since the below will be our dashboard, it should be in the dashboard route\r\n   As per remix convention\r\n   See: https://remix.run/docs/en/v1/guides/routing\r\n   Edit below to simply be a home page, but I kind of do want\r\n   */\r\n    return (\r\n        <Stack\r\n            justify='center'\r\n            textAlign='center'\r\n            h='100vh'\r\n            flex={1}\r\n            color='white'\r\n            gap={20}\r\n        >\r\n            <Stack gap={4} p={{ base: 4, md: 8 }} align='center'>\r\n                <Heading\r\n                    as='h1'\r\n                    size={headingSize}\r\n                    textTransform='uppercase'\r\n                    color='green.400'\r\n                >\r\n                    {`Welcome ${data.firstName} ${data.lastName}`}\r\n                </Heading>\r\n                <SignedIn>\r\n                    <Stack align='center' gap={4}>\r\n                        <Text>On root page, with nav?</Text>\r\n                        <Button onClick={() => signOut()} bg='gray.500'>\r\n                            Sign out\r\n                        </Button>\r\n                    </Stack>\r\n                </SignedIn>\r\n            </Stack>\r\n            <LogoBanner />\r\n        </Stack>\r\n    )\r\n}\r\n", "export default {'version':'bedb9a71','entry':{'module':'/build/entry.client-DEUSACYR.js','imports':['/build/_shared/chunk-LZV3VLMK.js','/build/_shared/chunk-TVFDCZJH.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-RVBO472S.js','imports':['/build/_shared/chunk-TSY52VUB.js','/build/_shared/chunk-72T7ZQZP.js','/build/_shared/chunk-IWXAX4EM.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/dashboard':{'id':'routes/dashboard','parentId':'root','path':'dashboard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard-XZV65PAA.js','imports':['/build/_shared/chunk-VVA43QMU.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/index':{'id':'routes/dashboard/index','parentId':'routes/dashboard','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/dashboard/index-ZEK3CFL7.js','imports':['/build/_shared/chunk-TSY52VUB.js','/build/_shared/chunk-IWXAX4EM.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-6HAJDARZ.js','imports':['/build/_shared/chunk-VVA43QMU.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-in/$':{'id':'routes/sign-in/$','parentId':'root','path':'sign-in/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-in/$-M3O45TR6.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-up/$':{'id':'routes/sign-up/$','parentId':'root','path':'sign-up/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-up/$-TU4JJNTX.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-BEDB9A71.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes\\\\dashboard.tsx\";\nimport * as route2 from \"./routes\\\\dashboard\\\\index.tsx\";\nimport * as route3 from \"./routes\\\\sign-in\\\\$.tsx\";\nimport * as route4 from \"./routes\\\\sign-up\\\\$.tsx\";\nimport * as route5 from \"./routes\\\\index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"v2_meta\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/dashboard\": {\n      id: \"routes/dashboard\",\n      parentId: \"root\",\n      path: \"dashboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/dashboard/index\": {\n      id: \"routes/dashboard/index\",\n      parentId: \"routes/dashboard\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/sign-in/$\": {\n      id: \"routes/sign-in/$\",\n      parentId: \"root\",\n      path: \"sign-in/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/sign-up/$\": {\n      id: \"routes/sign-up/$\",\n      parentId: \"root\",\n      path: \"sign-up/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    }\n  };"],
  "mappings": "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",
  "names": ["import_react", "isbot", "createEmotionCache", "EmotionCacheProvider", "createEmotionServer", "import_react", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "import_react", "import_node", "import_remix", "import_ssr", "import_react", "import_jsx_dev_runtime", "import_ssr", "import_jsx_dev_runtime", "loader", "dashboard_exports", "loader", "import_node", "import_ssr", "import_react", "import_jsx_dev_runtime", "import_react", "import_remix", "import_jsx_dev_runtime", "__exports", "import_react", "import_remix", "import_jsx_dev_runtime", "action", "Index", "loader", "import_react", "import_node", "import_remix", "import_ssr", "import_clerk_sdk_node", "import_jsx_dev_runtime", "dbErrorMessage", "loader", "action", "Index", "dashboard_exports", "__exports"]
}
